# loosely based on https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/

name: Publish the `pandoc-displaymath2equation` to PyPI
on:
  push:
    branches: [main]

jobs:
  build:
    name: Build package
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"

    - name: Install hatch
      run: python3 -m pip install hatch --user

    - name: Build wheel and sdist
      run: python3 -m hatch build

    - name: Store dists
      uses: actions/upload-artifact@v3
      with:
        name: python-package-distributions
        path: dist/

  publish:
    name: Publish package
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: publish
      url: https://pypi.org/p/pandoc-displaymath2equation
    permissions:
      id-token: write

    steps:
      - name: Retrieve dists
        uses: actions/download-artifact@v3
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: Sign files and release on GitHub
    needs: publish
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write

    steps:
      - name: Retrieve dists
        uses: actions/download-artifact@v3
        with:
          name: python-package-distributions
          path: dist/

      - name: Sign dists
        uses: sigstore/gh-action-sigstore-python@v2.1.1
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl

      # pretty hacky, but should be fine
      - name: Find project version
        id: find_version
        run: echo version=$(ls dist/*.tar.gz | sed -E 's/dist\/pandoc_displaymath2equation-(.+).tar.gz/\1/') >> "$GITHUB_OUTPUT"

      - name: Create release
        env:
          GITHUB_TOKEN: ${{ github.token }}
          version: 'v${{ steps.find_version.outputs.version }}'
          repo: '${{ github.repository }}'
        run: >-
          gh release create
          --generate-notes
          --repo "${repo}"
          "${version}"
          dist/**
